import asyncio
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher
from managers.banya_manager import BanyaManager
from managers.encyclopedia_manager import EncyclopediaManager
from managers.quiz_manager import QuizManager
from handlers.main_handlers import register_handlers, load_subscriptions, save_subscriptions
from handlers.quiz_handlers import register_quiz_handlers
from datetime import datetime, time, timedelta


# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä—ã
banya_mgr = BanyaManager()
encyclopedia_mgr = EncyclopediaManager()
quiz_mgr = QuizManager()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
register_handlers(dp, banya_mgr, encyclopedia_mgr, quiz_mgr)
register_quiz_handlers(dp, quiz_mgr)


async def daily_advice_sender(bot, encyclopedia_mgr):
    while True:
        now = datetime.now()
        target_time = datetime.combine(now.date(), time(hour=17, minute=0))
        if now > target_time:
            target_time += timedelta(days=1)
        wait_seconds = (target_time - now).total_seconds()
        await asyncio.sleep(wait_seconds)

        subs = load_subscriptions()
        for user_id, info in subs.items():
            if info.get("enabled"):
                advice = encyclopedia_mgr.get_random_advice()  # —Å–ª–æ–≤–∞—Ä—å {"text": ..., "photo": ...}
                text = advice["text"]

                # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö ---
                weekday = now.weekday()  # 0=–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 6=–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
                if weekday in [4,5,6]:  # –ü—è—Ç–Ω–∏—Ü–∞, –°—É–±–±–æ—Ç–∞, –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
                    text += "\nüî• –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è –±–∞–Ω–∏!"

                # --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞ ---
                if advice.get("photo"):
                    await bot.send_photo(int(user_id), photo=advice["photo"], caption=text)
                else:
                    await bot.send_message(int(user_id), f"üí° –°–æ–≤–µ—Ç –¥–Ω—è:\n{text}")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    asyncio.create_task(daily_advice_sender(bot, encyclopedia_mgr))
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
